- name: Configure DHCP Address Pools
  routeros_command:
    commands:
      - "/ip pool add name={{ item.get('name','pool') }} ranges={{ item.get('ranges')}}"
  loop: "{{ ip.get('dhcp-server',{}).get('pools',[]) }}"
  tags:
    - ipv4
    - dhcp

- name: Configure DHCP Networks
  routeros_command:
    commands:
      - "/ip dhcp-server network add address={{item.get('address')}} dns-server={{item.get('dns-server')}} gateway={{item.get('gateway')}} netmask={{item.get('netmask')}} domain={{item.get('domain','home.local')}}"
  loop: "{{ ip.get('dhcp-server',{}).get('networks',[]) }}"
  tags:
    - ipv4
    - dhcp

- name: Configure DHCP Pools
  routeros_command:
    commands:
       - "/ip dhcp-server add address-pool={{item.get('address-pool','static-only')}} allow-dual-stack-queue={{item.get('allow-dual-stack-queue','no') }} interface={{item.get('interface','bridge')}} lease-time={{item.get('lease-time','23h')}} name={{item.get('name', 'ignore')}} "
  loop: "{{ ip.get('dhcp-server',{}).get('servers',[]) }}"
  tags:
    - ipv4
    - dhcp

- name: Configure DHCP Static Entries
  routeros_command:
    commands:
      - "/ip dhcp-server lease add server={{item.0.key}} comment={{item.1.get('name')}} mac-address={{item.1.get('mac_address')}} address={{item.1.get('value')}}"
  with_subelements: 
    - "{{ internal_dhcp_hosts |dict2items}}"
    - value
  tags:
    - ipv4
    - hosts
